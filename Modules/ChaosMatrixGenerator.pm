########################################################
# MODULE FOR GENERATION OF THE CHAOS MATRIX FROM FASTQ #
#       GENERATED BY 10X scRNA SEQUENCING              #
#       author: Gonzalo Vigara Astillero               #
########################################################

package Modules::ChaosMatrixGenerator;
use strict;
use warnings;
use Cwd qw(getcwd);

use Exporter;
our @ISA = qw(Exporter);
our @EXPORT = qw(ChaosMatrixGeneration); #This is the module name

sub ChaosMatrixGeneration{
    #As we passed all the parameters as references we have to store them this way, individually by order or acceptance
    my %variables = %{$_[0]};
    my %genome_links = %{$_[1]};
    my @genome_names = @{$_[2]};

    #We define the individual variables we need for the use of the software

    my $human_genome_selection; #variable storing the option the user chooses for human genome
    my $reference_folder; #folder where the referecene genome is gonna be downloaded
    my $cellranger; #stores the cellranger command
    my $localmem;
    my $localcores;
    my $genome_file_name;
    my $key;

    #And we locate the system on the working directory
    chdir $variables{"Cellranger_path"};

    #We open the log file

    my $log_name = $variables{'Working_directory'}."/Cellranger_Log_".$variables{'Actual_date'}.".txt";
    open(QCLOG, ">".$log_name);

    #And begin with the proper analysis script
    if( $variables{"Working_directory"} and $variables{"Cellranger_path"} and $variables{"Cellranger_id"}){
        print QCLOG "\n----- CELLRANGER PARAMETERS -----\n\n";

        print QCLOG "Working directory: " . $variables{"Working_directory"} . "\n";
        print QCLOG "Cellranger installation path: " . $variables{"Cellranger_path"} . "\n";
        print QCLOG "ID for the cellranger project: " . $variables{"Cellranger_id"} . "\n";
        print QCLOG"Organism: " . $variables{"Cellranger_organism"} . "\n";
        if($variables{"Cellranger_organism"} =~ /[H-h]uman/){
            print QCLOG "Human reference genome selected: " . $variables{"Cellranger_reference"};
            if($variables{"Cellranger_reference"} == 1){
                print QCLOG "\nGenome GRCh38 selected \n"
            }
            elsif($variables{"Cellranger_reference"} == 2){
                print QCLOG "\nGenome hg19 selected \n";
            }
            else{
                die "\n ERROR: The genome selected for human organism is not correct. Please check config.ini, section Cellranger\n";
            }
        }
        else{
            print QCLOG "\nNon human organism selected.\n";
        }
        print QCLOG "Expected cells for the analysis: " . $variables{"Expected_cells"} . "\n";
        print QCLOG "CPU cores for the analysis: " . $variables{"QC_threads"} . "\n";
        print QCLOG "RAM memory assigned for the analysis: " . $variables{"Cellranger_mem"} . "\n";
    }
    else{
        if(!$variables{"Cellranger_path"}){
            print "\nPath for cellranger is: " . $variables{"Cellranger_path"} . "\n";
            print QCLOG "\nPath for cellranger is: " . $variables{"Cellranger_path"} . "\n";
            die "\nERROR: No path for cellranger was specified. Exiting... \n";
        }
        elsif(!$variables{"Cellranger_id"}){
            die "\nERROR: No id for cellranger job was specified. Exiting...\n";
        }
        else{
            die "\nERROR: No organism was specified for the analysis. Exiting...\n"
        }
    }

    


    #We store the path to the folder where the reference genomes are stored
    $reference_folder = $variables{"Cellranger_path"} . "/Reference_genomes";
    if(-d $reference_folder){ #If the folder exists
        print "\n" . $reference_folder . " already exists.\n";
        print QCLOG "\n" . $reference_folder . " already exists.\n";
        chdir($reference_folder); #move to the folder
    }
    else{ #If it doesnt exists, create it and move there
        print "\n" . $reference_folder . " doesn't exist, creating a new one...\n";
        print QCLOG "\n" . $reference_folder . " doesn't exist, creating a new one...\n";
        mkdir($reference_folder);
        chdir($reference_folder); #move to the folder
    }
    

    #Modified loop for genome selection

    #First we have to store the keys for the links variable, as this will have the names of the files
    #    foreach $key (keys %genome_links){
    #        push(@genome_names, $key); #This way we will store all the names for the genomes
    #        print "$key \n";
    #    }

    GENOME_SELECTION: if($variables{"Cellranger_organism"} =~ /[H-h]uman/){
        if($variables{"Cellranger_reference"} == 1){
            if (-d "./$genome_names[0]"){ #If the directory for GRCH38 already exists, dont download it
                $variables{"Cellranger_ref_path"} = getcwd() . "/$genome_names[0]";
                print "\nThe selected genome has already been downloaded and decompressed on: " . $variables{"Cellranger_ref_path"} . "\n";
                print "\nSkipping...\n";
            }
            else{ #If the directory doesn't exist we download it
                print "\nDownloading Human GRCh38 genome...\n";
                print QCLOG "\nDownloading Human GRCh38 genome...\n";
                        #We download the genome
                        qx/curl -O $genome_links{"$genome_names[0]"}/; #We use the flag -O to continue with a non-completed download
                        print "\nDecrompressing the genome\n";
                        #Uncompress the genome in the predefined folder
                        qx/tar -xzvf $genome_names[0]\.tar\.gz/;
                        qx/rm $genome_names[0]\.tar\.gz/; #remove the genome after decompressing
                        #Stablish the reference genome variable to the current folder
                        $variables{"Cellranger_ref_path"} = getcwd() . "/$genome_names[0]";
                        print "\n---------------------------------------------------------------------------------------------\n";
                        print "\nThe reference genome for the analysis has been stored on:\n";
                        print QCLOG"\nThe reference genome for the analysis has been stored on:\n";
                        print $variables{"Cellranger_ref_path"};
                        print QCLOG$variables{"Cellranger_ref_path"};
                }
            }
        elsif($variables{"Cellranger_reference"} == 2){
            if (-d "./$genome_names[1]"){ #If the directory for GRCH38 already exists, dont download it
                $variables{"Cellranger_ref_path"} = getcwd() . "/$genome_names[1]";
                print "\nThe selected genome has already been downloaded and decompressed on: " . $variables{"Cellranger_ref_path"} . "\n";
                print "\nSkipping...\n";
            }
            else{ #If the directory doesn't exist we download it
                print QCLOG "\nDownloading Human hg19 genome...\n";
                 print "\nDownloading Human hg19 genome...\n";

                        #We download the genome
                        qx/curl -O $genome_links{"$genome_names[1]"}/; #We use the flag -O to continue with a non-completed download
                        print "\nDecrompressing the genome\n";
                        #Uncompress the genome in the predefined folder
                        qx/tar -xzvf $genome_names[1]\.tar\.gz/;
                        qx/rm $genome_names[1]\.tar\.gz/; #Remove the genome after decompressing
                        #Stablish the reference genome variable to the current folder
                        $variables{"Cellranger_ref_path"} = getcwd() . "/$genome_names[1]";
                        print "\n---------------------------------------------------------------------------------------------\n";
                        print "\nThe reference genome for the analysis has been stored on:\n";
                        print $variables{"Cellranger_ref_path"};
                        print QCLOG "\nThe reference genome for the analysis has been stored on:\n";
                        print QCLOG $variables{"Cellranger_ref_path"};
            }
        }
    }
    elsif($variables{"Cellranger_organism"} =~ /[M-m]ouse/){
            if(-d "./$genome_names[2]"){
                $variables{"Cellranger_ref_path"} = getcwd() . "/$genome_names[2]";
                print "\nThe selected genome has already been downloaded and decompressed on: " . $variables{"Cellranger_ref_path"} . "\n";
                print "Skipping...\n";
            }
            else{
                print "\nDownloading mouse reference genome...\n";
                print QCLOG"\nDownloading mouse reference genome...\n";
                #If wget is absent, the system will download the genome with curl
                qx/curl -O $genome_links{"$genome_names[2]"}/;
                #Now we uncompress the genome in the predefined folder
                qx/tar -xzvf $genome_names[2]\.tar\.gz/;
                qx/rm $genome_names[2]\.tar\.gz/; #And after decompressing the genome we remove it
                #STablish the reference genome variable to the current folder
                $variables{"Cellranger_ref_path"} = getcwd() . "/$genome_names[2]";
                print "\n---------------------------------------------------------------------------------------------\n";
                print "\nThe reference genome for the analysis has been stored on:\n";
                print $variables{"Cellranger_ref_path"};
                print QCLOG "\nThe reference genome for the analysis has been stored on:\n";
                print QCLOG $variables{"Cellranger_ref_path"};
            }
    }
    else{
        die "ERROR: The organism you wrote is not on the database for reference genomes provided by 10X. Exiting...\n";
    }



    #After we have our reference genome we just have to launch the Cellranger Analysis

    print "\n-------------------------------------------------------------------------------------------\n";
    print "\t\tINITIATING CELLRANGER ANALYSIS";
    print "\n-------------------------------------------------------------------------------------------\n";
    print QCLOG "\n-------------------------------------------------------------------------------------------\n";
    print QCLOG "\t\tINITIATING CELLRANGER ANALYSIS";
    print QCLOG "\n-------------------------------------------------------------------------------------------\n";

    #Now we change the directory back to our working directory

    chdir $variables{"Working_directory"};

    #And then we use all the variables to execute the programm

    $cellranger = "cellranger count " . "--id=" . $variables{"Cellranger_id"} . " --transcriptome=" . $variables{"Cellranger_ref_path"}
                . " --fastqs=" . $variables{"Working_directory"} . " --expect-cells=" . $variables{"Expected_cells"};

    #now we add the flags for the number of CPU cores and memory if they were selected. If not
    #The flag will not appear on the command

    $localmem = $variables{"Cellranger_mem"};
    $localcores = $variables{"QC_threads"}; #We assign the hash to variables to concatenate them, if not
    #the concatenation will return a "position" rather than the value

    #Remember when cores or memory values are not assigned by user the value is filled with the string
    #"AUTOMATIC SELECTION BY SOFTWARE"

    if($variables{"QC_threads"} ne "AUTOMATIC SELECTION BY SOFTWARE" && $variables{"Cellranger_mem"} ne "AUTOMATIC SELECTION BY SOFTWARE"){
        $cellranger = $cellranger . " --localcores=" . $localcores . " --localmem=" . $localmem;
    }
    elsif($variables{"QC_threads"} ne "AUTOMATIC SELECTION BY SOFTWARE" && $variables{"Cellranger_mem"} eq "AUTOMATIC SELECTION BY SOFTWARE"){
        $cellranger = $cellranger . " --localcores=" . $localcores;
    }
    elsif($variables{"Cellranger_mem"} ne "AUTOMATIC SELECTION BY SOFTWARE" && $variables{"QC_threads"} eq "AUTOMATIC SELECTION BY SOFTWARE"){
        $cellranger = $cellranger . " --localmem=" . $localmem;
    }
    else{
        print STDERR "\nUnable to determine the amount of RAM and number of cores specified\n";
    }

    #And now we execute the command!!

    print "\nExecuting:\n" . $cellranger . "\n";

    #my $cellranger_output = system($variables{"Cellranger_path"} . "/" . $cellranger);
    my $cellranger_output = qx/$variables{'Cellranger_path'}"\/"$cellranger/;

    print QCLOG "\nExecuting: \n" . $cellranger . "\n";
    print QCLOG $cellranger_output;

    #After we execute the command, we add to the hash %variables the route
    #to the output

    my $cellranger_output_path = $variables{"Working_directory"} . "/" . $variables{"Cellranger_id"} . "/" . "outs/filtered_feature_bc_matrix";

    print "\nCellranger output located on: ". $cellranger_output_path . "\n";
    print QCLOG "\nCellranger output located on: ". $cellranger_output_path . "\n";

    close QCLOG;
    return($cellranger_output_path);
}