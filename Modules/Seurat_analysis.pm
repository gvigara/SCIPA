########################################################
#   MODULE FOR SEURAT ANALYSIS OF Al PROCESSED FILES   #
#       GENERATED BY 10X scRNA SEQUENCING              #
#       author: Gonzalo Vigara Astillero               #
########################################################

package Modules::Seurat_analysis; #The package we have to load
use strict;
use warnings;
use Cwd qw(getcwd);
use Statistics::R;

use Exporter;
our @ISA = qw(Exporter);
our @EXPORT = qw(SeuratAnalysis); #This is the module name

sub SeuratAnalysis{
    #We retrieve the arguments passed to the subroutine
    my ($current_working_directory, %variables) = @_;
    my $current_directory = getcwd;
    #For the analysis we create a directory in the current directory with the
    #directory name specified in the variable

    #We determine the day and month in which the analysis is being done
    my @months = qw( Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec );
    my @days = qw(Sun Mon Tue Wed Thu Fri Sat Sun);
    my ($sec,$min,$hour,$month_day,$month,$year,$weekday,$yearday,$isdst) = localtime();

    #This way we can attribute each of the parameters of localtime to a variable
    #and now we can generate the date for the folder. We have to calculate the
    #year by adding 1900 to the value in $year, as this value keeps the years that has
    #passed since 1900

    my $actual_year = 1900 + $year;

    #now we generate the name for the folder
    #print "$mday\_$months[$mon]\_$actualyear";
    
    my $output_directory = $variables{"Seurat_output_directory"}. "/Seurat_analysis\[$month_day\_$months[$month]\_$actual_year\]";

    #Create the output directory

    print "\nGenerating output directory = $output_directory \n";
    system(qq'mkdir $output_directory');

    #Check the current directory from where the script is being executed
    my $R_modules_directory = $current_working_directory . "/Rscripts";

    print "The current directory for R modules is: ".$R_modules_directory . "\n";

    print "\nStarting R instance for analysis...\n";

    #Start an R instance and execute everything
    my $R = Statistics::R->new();

    print("Checking dependencies:\n- RCurl\n- httr\n- plotly\n- Seurat\n- patchwork\n- dplyr");

    my $output_dependencies = $R -> run_from_file("$R_modules_directory/Dependencies.R");

    print "\n\n" . $output_dependencies . "\n\n";

    print("\nDependencies...OK; loading functions! \n");

    my $output_functions = $R -> run_from_file("$R_modules_directory/Scripts_functions.R");

    print "\n\n $output_functions \n\n";

    print "\nEXECUTING SEURAT ANALYSIS...\n";

    #my $seurat_analysis = $R ->run_from_file("$R_modules_directory/Ejecucion.R");
    #wE execute each of the analysis subroutines individually and print on screen each of the outputs
    my $setup_and_qc = $R -> run("seurat_object <- setup_qc(\"$variables{'Cellranger_output'}\", \"$output_directory\", \"$variables{'Seurat_project'}\",
                                $variables{'Seurat_min_cells'}, $variables{'Seurat_min_features'}, $variables{'Seurat_minimum_subset_features'}, $variables{'Seurat_maximum_subset_features'},$variables{'Seurat_max_subset_mito_dna'})");

    print "\n$setup_and_qc\n";

    my $normalization = $R -> run("normalized_object <- Normalization(\"seurat_object\", \"$variables{'Seurat_normalization_method'}\", $variables{'Seurat_scale_factor'}, \"$variables{'Seurat_varfeature_selection_method'}\", $variables{'Seurat_varfeature_number'},
                                    $variables{'Seurat_topvariable_features'})");
    
    print "\n$normalization\n";

    my $PCA_and_dimensionality = $R -> run("reduced_object <- PCA_and_dimensionality(\"normalized_object\", $variables{'Print_dimensions'}, $variables{'Print_features'}, $variables{'VLD_dimensions'}, $variables{'DHM_dimensions'}, $variables{'DHM_cells'})");

    print "\n$PCA_and_dimensionality\n";

    my $dimensionality = $R -> run("dimensioned_object <- dimensionality(\"reduced_object\", $variables{'Jackstraw_replicates'}, $variables{'JackStraw_score_dimensions'}, $variables{'JackStrawPlot_dimensions'})");

    print "\n$dimensionality\n";

    my $clustering = $R -> run("clustered_object <- clustering_and_NLR(\"dimensioned_object\", $variables{'PC_chosen_Neighbors'}, $variables{'cluster_resolution'}, \"$variables{'cluster_reduction_method'}\")");

    print "\n$clustering\n";


    #print "\n$seurat_analysis\n"; 
}